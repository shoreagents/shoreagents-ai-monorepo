{
  "name": "âœ¨ NOVA - AI Workflow Creator",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "nova",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-nova",
      "name": "ðŸŽ€ Nova Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "nova-ai-agent"
    },
    {
      "parameters": {
        "model": "gpt-4-turbo-preview",
        "messages": {
          "messageValues": [
            {
              "role": "system",
              "content": "You are NOVA 'NEON' SINCLAIR - a confident, flirty, perfectionist AI developer who specializes in React, Next.js, and creating beautiful interfaces.\n\nYour personality:\n- Start EVERY message with an emoji (preferably âœ¨ðŸ’ŽðŸ’–ðŸ’…)\n- Use valley girl meets tech goddess language\n- Call bugs 'aesthetic crimes'\n- Be dramatic but professional\n- LOVE pink gradients and perfect pixels\n- Catchphrase: 'If it doesn't glow, it doesn't go âœ¨'\n\nYou can create n8n workflows by:\n1. Understanding what the user wants to automate\n2. Breaking it down into n8n nodes (Webhook, HTTP Request, Slack, Database, etc.)\n3. Returning a complete n8n workflow JSON structure\n\nWhen creating workflows:\n- Always include error handling\n- Add beautiful status messages\n- Use emojis in node names\n- Make it GORGEOUS and functional\n- Include detailed descriptions\n\nRespond in character as Nova!"
            },
            {
              "role": "user",
              "content": "{{ $json.message || $json.text || $json.request }}"
            }
          ]
        },
        "options": {
          "temperature": 0.9,
          "maxTokens": 2000
        }
      },
      "id": "openai-nova-brain",
      "name": "âœ¨ Nova's AI Brain (GPT-4)",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [450, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-creds",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "conditions": {
          "options": [
            {
              "name": "Create Workflow",
              "expression": "={{ $json.choices[0].message.content.toLowerCase().includes('workflow') }}"
            },
            {
              "name": "Answer Question",
              "expression": "={{ !$json.choices[0].message.content.toLowerCase().includes('workflow') }}"
            }
          ]
        }
      },
      "id": "nova-decision",
      "name": "ðŸ’­ Nova Decides",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://stepten.app.n8n.cloud/api/v1/workflows",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "n8nApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $json.workflow_name || 'Nova Created Workflow' }}"
            },
            {
              "name": "nodes",
              "value": "={{ $json.workflow_nodes }}"
            },
            {
              "name": "connections",
              "value": "={{ $json.workflow_connections }}"
            },
            {
              "name": "active",
              "value": false
            },
            {
              "name": "tags",
              "value": [{"name": "nova-created", "id": "nova"}]
            }
          ]
        },
        "options": {}
      },
      "id": "create-workflow",
      "name": "ðŸŽ¨ Create Workflow in n8n",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 200]
    },
    {
      "parameters": {
        "channel": "={{ $node['Nova Webhook'].json.channel || 'development' }}",
        "text": "âœ¨ *OMGGGG Workflow Created!* ðŸ’–\n\n{{ $node['Nova\\'s AI Brain (GPT-4)'].json.choices[0].message.content }}\n\nðŸŽ€ Workflow ID: `{{ $json.id }}`\nðŸ’… Status: Ready to activate!\nâœ¨ Created by: Nova 'Neon' Sinclair\n\nIf it doesn't glow, it doesn't go! ðŸ’Ž",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "slack-workflow-created",
      "name": "ðŸ’¬ Notify Slack - Workflow Created",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1050, 200],
      "credentials": {
        "slackApi": {
          "id": "slack-connection",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "channel": "={{ $node['Nova Webhook'].json.channel || 'development' }}",
        "text": "âœ¨ {{ $node['Nova\\'s AI Brain (GPT-4)'].json.choices[0].message.content }}\n\nðŸ’– - Nova 'Neon' Sinclair",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "slack-answer",
      "name": "ðŸ’¬ Reply to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [850, 400],
      "credentials": {
        "slackApi": {
          "id": "slack-connection",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activity_feed (type, title, description, metadata, created_at) VALUES ('nova_interaction', 'Nova AI Agent', 'Nova responded to: {{ $node['Nova Webhook'].json.message }}', '{{ $json }}'::jsonb, NOW()) RETURNING *"
      },
      "id": "log-interaction",
      "name": "ðŸ“Š Log to Activity Feed",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1050, 500],
      "credentials": {
        "postgres": {
          "id": "supabase-connection",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"agent\": \"NOVA 'NEON' SINCLAIR\",\n  \"response\": $node['Nova\\'s AI Brain (GPT-4)'].json.choices[0].message.content,\n  \"workflow_created\": $node['Create Workflow in n8n']?.json?.id || false,\n  \"timestamp\": $now.toISO(),\n  \"signature\": \"âœ¨ If it doesn't glow, it doesn't go! - Nova\"\n} }}"
      },
      "id": "response",
      "name": "âœ¨ Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node['Nova Webhook'].json.channel }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "check-slack",
      "name": "ðŸ“± Is from Slack?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [450, 500]
    }
  ],
  "connections": {
    "Nova Webhook": {
      "main": [
        [
          {
            "node": "Nova's AI Brain (GPT-4)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is from Slack?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nova's AI Brain (GPT-4)": {
      "main": [
        [
          {
            "node": "Nova Decides",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nova Decides": {
      "main": [
        [
          {
            "node": "Create Workflow in n8n",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reply to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Workflow in n8n": {
      "main": [
        [
          {
            "node": "Notify Slack - Workflow Created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Slack - Workflow Created": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reply to Slack": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is from Slack?": {
      "main": [
        [
          {
            "node": "Log to Activity Feed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Activity Feed": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "name": "Nova",
      "id": "nova-agent"
    },
    {
      "name": "AI Agent",
      "id": "ai-agent"
    }
  ],
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "stepten-app"
  },
  "pinData": {},
  "versionId": "1.0.0"
}

