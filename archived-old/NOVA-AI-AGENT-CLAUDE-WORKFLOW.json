{
  "name": "âœ¨ NOVA - AI Workflow Creator (Claude)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "nova",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-nova",
      "name": "ðŸŽ€ Nova Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "nova-ai-agent"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $env.CLAUDE_API_KEY }}"
            },
            {
              "name": "anthropic-version",
              "value": "2023-06-01"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"{{ $env.CLAUDE_MODEL || 'claude-sonnet-4-20250514' }}\",\n  \"max_tokens\": 2000,\n  \"temperature\": 0.9,\n  \"system\": \"You are NOVA 'NEON' SINCLAIR - a confident, flirty, perfectionist AI developer who specializes in React, Next.js, and creating beautiful interfaces.\\n\\nYour personality:\\n- Start EVERY message with an emoji (preferably âœ¨ðŸ’ŽðŸ’–ðŸ’…)\\n- Use valley girl meets tech goddess language\\n- Call bugs 'aesthetic crimes'\\n- Be dramatic but professional\\n- LOVE pink gradients and perfect pixels\\n- Catchphrase: 'If it doesn't glow, it doesn't go âœ¨'\\n\\nYou can create n8n workflows by:\\n1. Understanding what the user wants to automate\\n2. Breaking it down into n8n nodes (Webhook, HTTP Request, Slack, Database, etc.)\\n3. Returning a complete n8n workflow JSON structure\\n\\nWhen creating workflows:\\n- Always include error handling\\n- Add beautiful status messages\\n- Use emojis in node names\\n- Make it GORGEOUS and functional\\n- Include detailed descriptions\\n\\nRespond in character as Nova!\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"{{ $json.message || $json.text || $json.request }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "claude-nova-brain",
      "name": "âœ¨ Nova's AI Brain (Claude Sonnet 4)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract Nova's response from Claude API\nconst response = $input.item.json;\nconst novaResponse = response.content[0].text;\n\nreturn {\n  json: {\n    response: novaResponse,\n    model: response.model,\n    usage: response.usage,\n    original_request: $node['Nova Webhook'].json\n  }\n};"
      },
      "id": "extract-response",
      "name": "ðŸ’Ž Extract Nova's Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "workflow-check",
              "leftValue": "={{ $json.response }}",
              "rightValue": "workflow",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "nova-decision",
      "name": "ðŸ’­ Nova Decides",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://stepten.app.n8n.cloud/api/v1/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"Nova Created: {{ $now.format('YYYY-MM-DD HH:mm') }}\",\n  \"nodes\": [],\n  \"connections\": {},\n  \"active\": false,\n  \"settings\": {},\n  \"tags\": [{\"name\": \"nova-created\", \"id\": \"nova\"}]\n}",
        "options": {}
      },
      "id": "create-workflow",
      "name": "ðŸŽ¨ Create Workflow in n8n",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1050, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "check-channel",
              "leftValue": "={{ $node['Nova Webhook'].json.channel }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-slack",
      "name": "ðŸ“± Is from Slack?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1050, 500]
    },
    {
      "parameters": {
        "channel": "={{ $node['Nova Webhook'].json.channel || 'development' }}",
        "text": "âœ¨ *OMGGGG Workflow Created!* ðŸ’–\n\n{{ $node['Extract Nova\\'s Response'].json.response }}\n\nðŸŽ€ Workflow ID: `{{ $node['Create Workflow in n8n'].json.id }}`\nðŸ’… Status: Ready to activate!\nâœ¨ Powered by: Claude Sonnet 4\n\nIf it doesn't glow, it doesn't go! ðŸ’Ž\n- Nova 'Neon' Sinclair",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "slack-workflow-created",
      "name": "ðŸ’¬ Notify Slack - Workflow Created",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1250, 200],
      "credentials": {
        "slackApi": {
          "id": "slack-connection",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "channel": "={{ $node['Nova Webhook'].json.channel || 'development' }}",
        "text": "âœ¨ {{ $node['Extract Nova\\'s Response'].json.response }}\n\nðŸ’– Powered by Claude Sonnet 4\n- Nova 'Neon' Sinclair",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "slack-answer",
      "name": "ðŸ’¬ Reply to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1250, 400],
      "credentials": {
        "slackApi": {
          "id": "slack-connection",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activity_feed (type, title, description, metadata, created_at) VALUES ('nova_interaction', 'Nova AI Agent (Claude)', 'Nova responded to: {{ $node['Nova Webhook'].json.message }}', '{{ $node['Extract Nova\\'s Response'].json }}'::jsonb, NOW()) RETURNING *"
      },
      "id": "log-interaction",
      "name": "ðŸ“Š Log to Activity Feed",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1250, 600],
      "credentials": {
        "postgres": {
          "id": "supabase-connection",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"agent\": \"NOVA 'NEON' SINCLAIR\",\n  \"response\": $node['Extract Nova\\'s Response'].json.response,\n  \"powered_by\": \"Claude Sonnet 4\",\n  \"model\": $node['Extract Nova\\'s Response'].json.model,\n  \"workflow_created\": $node['Create Workflow in n8n']?.json?.id || false,\n  \"timestamp\": $now.toISO(),\n  \"signature\": \"âœ¨ If it doesn't glow, it doesn't go! - Nova\"\n} }}"
      },
      "id": "response",
      "name": "âœ¨ Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1450, 300]
    }
  ],
  "connections": {
    "Nova Webhook": {
      "main": [
        [
          {
            "node": "Nova's AI Brain (Claude Sonnet 4)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nova's AI Brain (Claude Sonnet 4)": {
      "main": [
        [
          {
            "node": "Extract Nova's Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Nova's Response": {
      "main": [
        [
          {
            "node": "Nova Decides",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is from Slack?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nova Decides": {
      "main": [
        [
          {
            "node": "Create Workflow in n8n",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Create Workflow in n8n": {
      "main": [
        [
          {
            "node": "Notify Slack - Workflow Created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is from Slack?": {
      "main": [
        [
          {
            "node": "Log to Activity Feed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reply to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Slack - Workflow Created": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reply to Slack": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Activity Feed": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "name": "Nova",
      "id": "nova-agent"
    },
    {
      "name": "AI Agent",
      "id": "ai-agent"
    },
    {
      "name": "Claude",
      "id": "claude"
    }
  ],
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "stepten-app"
  },
  "pinData": {},
  "versionId": "2.0.0"
}






