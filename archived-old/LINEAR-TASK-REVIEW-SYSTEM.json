{
  "title": "🎯 Complete Performance Review System - 4 Review Types (Month 1/3/5 + Recurring)",
  "description": "# 🚀 PERFORMANCE REVIEW SYSTEM IMPLEMENTATION\n\n**Status:** Ready for implementation\n**Priority:** High\n**Estimate:** 16-20 hours\n**Branch:** Create new branch `feature/performance-reviews`\n\n---\n\n## 📋 OVERVIEW\n\nImplement complete performance review system with 4 review types based on Philippine DOLE labor requirements:\n- **Month 1 Review:** 18 questions (30 days after startDate)\n- **Month 3 Review:** 27 questions (90 days after startDate)\n- **Month 5 Review:** 24 questions (150 days after startDate) - REGULARIZATION DECISION\n- **Recurring Review:** 18 questions (every 180 days post-regularization)\n\n---\n\n## 🎯 WORKFLOW\n\n```\n1. SYSTEM AUTO-CREATES review 7 days before due date\n   └─ Status: PENDING\n   └─ Notifies CLIENT\n\n2. CLIENT completes review form\n   └─ Rates 1-5 on all questions\n   └─ Provides strengths/improvements feedback\n   └─ Status: PENDING → SUBMITTED\n   └─ Notifies MANAGEMENT\n\n3. MANAGEMENT processes review\n   └─ Reviews client feedback\n   └─ Adds internal notes\n   └─ Status: SUBMITTED → UNDER_REVIEW\n   └─ Notifies STAFF\n\n4. STAFF acknowledges review\n   └─ Reads feedback\n   └─ Status: UNDER_REVIEW → COMPLETED\n   └─ Notifies CLIENT\n```\n\n---\n\n## 🔢 SCORING SYSTEM\n\n**Rating Scale:** 1-5 per question\n- 1 = Poor (Critical concern)\n- 2 = Below Expectations\n- 3 = Meets Expectations\n- 4 = Exceeds Expectations\n- 5 = Outstanding\n\n**Overall Score:** (Total Points / Total Possible) × 100 = Percentage\n\n**Performance Levels:**\n- 0-49% = 🔴 CRITICAL (management alert)\n- 50-69% = 🟡 NEEDS IMPROVEMENT\n- 70-84% = 🟢 GOOD\n- 85-100% = 🔵 EXCELLENT\n\n---\n\n## ✅ IMPLEMENTATION CHECKLIST\n\n### Phase 1: Database & Core Logic (4 hours)\n- [ ] Update Prisma schema:\n  - [ ] ReviewType enum (MONTH_1, MONTH_3, MONTH_5, RECURRING)\n  - [ ] ReviewStatus enum (PENDING, SUBMITTED, UNDER_REVIEW, COMPLETED)\n  - [ ] Review model fields (ratings, strengths, improvements, managementNotes, etc.)\n  - [ ] Run migration\n- [ ] Replace `lib/review-templates.ts` with NEW templates:\n  - [ ] MONTH_1_TEMPLATE (18 questions, 6 categories)\n  - [ ] MONTH_3_TEMPLATE (27 questions, 7 categories)\n  - [ ] MONTH_5_TEMPLATE (24 questions, 5 categories)\n  - [ ] RECURRING_TEMPLATE (18 questions, 6 categories)\n- [ ] Create `lib/review-utils.ts` helper functions\n\n### Phase 2: API Routes (4 hours)\n- [ ] **Client Portal APIs:**\n  - [ ] `POST /api/client/reviews` - Submit review\n  - [ ] `GET /api/client/reviews` - Get pending/submitted reviews\n  - [ ] `GET /api/client/reviews/[reviewId]` - Get specific review\n- [ ] **Admin Portal APIs:**\n  - [ ] `GET /api/admin/reviews` - Get all reviews with filters\n  - [ ] `PUT /api/admin/reviews` - Process review (add notes, mark reviewed)\n  - [ ] `GET /api/admin/reviews/stats` - Dashboard stats\n  - [ ] `POST /api/admin/reviews/trigger-creation` - Manual trigger (local dev)\n- [ ] **Staff Portal APIs:**\n  - [ ] `GET /api/reviews` - Get UNDER_REVIEW + COMPLETED only\n  - [ ] `POST /api/reviews/[id]/acknowledge` - Acknowledge review\n\n### Phase 3: Client Portal UI (4 hours)\n- [ ] Create `app/client/reviews/page.tsx`:\n  - [ ] Pending reviews list (overdue in red)\n  - [ ] Submitted reviews history\n  - [ ] Staff cards with review status\n- [ ] Create `app/client/reviews/submit/[reviewId]/page.tsx`:\n  - [ ] Multi-step wizard (5 steps)\n  - [ ] Progress indicator\n  - [ ] 1-5 star rating UI for each question\n  - [ ] Text areas for strengths/improvements\n  - [ ] Auto-save draft to localStorage\n  - [ ] Submit button\n- [ ] Create components:\n  - [ ] `components/client/review-question-card.tsx`\n  - [ ] `components/client/review-progress.tsx`\n\n### Phase 4: Admin Portal UI (3 hours)\n- [ ] Create `app/admin/reviews/page.tsx`:\n  - [ ] Stats cards (Pending, Submitted, Overdue, Critical)\n  - [ ] Filter tabs (All, Pending, Submitted, Under Review, Completed)\n  - [ ] Reviews table with staff/client/type/status/score\n  - [ ] \"Trigger Review Creation\" button for manual testing\n- [ ] Create `app/admin/reviews/[reviewId]/page.tsx`:\n  - [ ] Staff info header\n  - [ ] Client submission with category breakdown\n  - [ ] Management notes textarea\n  - [ ] \"Mark as Reviewed\" button\n  - [ ] Status timeline\n\n### Phase 5: Staff Portal UI (2 hours)\n- [ ] Update `app/reviews/page.tsx`:\n  - [ ] Timeline view of all reviews\n  - [ ] Review cards with type badge, score, date\n  - [ ] Performance level badges (🔴🟡🟢🔵)\n  - [ ] Category breakdown\n  - [ ] Client feedback display\n  - [ ] \"Acknowledge Review\" button\n  - [ ] Performance trend graph (if multiple reviews)\n- [ ] Create `components/reviews/review-detail-modal.tsx`:\n  - [ ] Full review details\n  - [ ] All questions and ratings\n  - [ ] Acknowledgment button\n\n### Phase 6: Testing & Refinement (3 hours)\n- [ ] Update `prisma/seed.ts` with test reviews\n- [ ] Test complete workflow:\n  - [ ] Auto-creation (manual trigger for local)\n  - [ ] Client submission\n  - [ ] Admin processing\n  - [ ] Staff acknowledgment\n- [ ] Test all 4 review types\n- [ ] Test critical score alerts (<50%)\n- [ ] Test overdue indicators\n- [ ] Mobile responsiveness check\n\n---\n\n## 📁 KEY FILES\n\n### New Files (13):\n1. `lib/review-utils.ts`\n2. `app/api/client/reviews/[reviewId]/route.ts`\n3. `app/api/admin/reviews/stats/route.ts`\n4. `app/api/admin/reviews/trigger-creation/route.ts`\n5. `app/client/reviews/page.tsx`\n6. `app/client/reviews/submit/[reviewId]/page.tsx`\n7. `app/admin/reviews/page.tsx`\n8. `app/admin/reviews/[reviewId]/page.tsx`\n9. `components/client/review-question-card.tsx`\n10. `components/client/review-progress.tsx`\n11. `components/reviews/review-detail-modal.tsx`\n12. `scripts/migrate-reviews.ts`\n13. `LINEAR-TASK-REVIEW-SYSTEM.json`\n\n### Updated Files (6):\n1. `prisma/schema.prisma`\n2. `lib/review-templates.ts`\n3. `app/api/client/reviews/route.ts`\n4. `app/api/admin/reviews/route.ts`\n5. `app/api/reviews/route.ts`\n6. `app/api/reviews/[id]/acknowledge/route.ts`\n\n---\n\n## 🎨 DESIGN REQUIREMENTS\n\n**Match Existing Theme:**\n- Glassmorphism dark theme (staff portal)\n- Professional blue theme (client portal)\n- Clean admin interface\n\n**Mobile-First:**\n- Review forms must work perfectly on mobile\n- Touch-friendly star ratings\n- Responsive multi-step wizard\n\n**Key UI Elements:**\n- 🔴🟡🟢🔵 Performance level badges\n- ⭐⭐⭐⭐⭐ Star rating inputs\n- 📊 Category score breakdowns\n- 📈 Performance trend graphs\n- ⏰ Overdue warnings (red)\n\n---\n\n## 🚨 CRITICAL REQUIREMENTS\n\n1. **Date Calculation:** Use `startDate` from StaffUser (NOT hire_date)\n   - Month 1: startDate + 30 days\n   - Month 3: startDate + 90 days\n   - Month 5: startDate + 150 days\n   - Recurring: Every 180 days after regularization\n\n2. **Auto-Creation Timing:** Create reviews 7 days BEFORE due date\n   - For local dev: Manual trigger via admin button\n   - For production: Can add Vercel cron later\n\n3. **Permissions:**\n   - Client: Can ONLY submit reviews for THEIR assigned staff\n   - Staff: Can ONLY view/acknowledge THEIR OWN reviews\n   - Admin: Can view/process ALL reviews\n\n4. **Score Alerts:**\n   - < 50%: Flag for immediate management attention\n   - Month 5 < 70%: Regularization risk alert\n\n5. **Data Integrity:**\n   - Migrate existing reviews to new statuses\n   - Preserve all existing review data\n\n---\n\n## 📊 SUCCESS METRICS\n\n- [ ] All 4 review types implemented\n- [ ] Complete workflow tested end-to-end\n- [ ] Client can submit reviews on mobile\n- [ ] Admin can process reviews\n- [ ] Staff can view and acknowledge\n- [ ] Score calculations accurate\n- [ ] Performance levels display correctly\n- [ ] Auto-creation works (manual trigger)\n- [ ] All 3 portals have review pages\n- [ ] Design matches existing theme\n\n---\n\n## 🔗 DOCUMENTATION\n\nAll specs in: `/review-system-integration.plan.md`\n\nFull requirements: See spec file with 4 templates (87 total questions)\n\n---\n\n## 💡 NOTES\n\n- Follow existing patterns from onboarding system\n- Model admin workflow after `app/admin/staff/onboarding/[staffUserId]/page.tsx`\n- Use same auth patterns from existing API routes\n- Maintain glassmorphism theme consistency\n- Mobile-first approach for forms\n\n---\n\n**Ready to start! Branch: `feature/performance-reviews`** 🚀",
  "priority": 1,
  "estimate": 20,
  "labels": ["feature", "reviews", "client-portal", "admin-portal", "staff-portal"]
}

